<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="71" tokens="471">
<file line="14" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/SqlServerLexer.java"/>
<file line="32" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/SqlServerParser.java"/>
<codefragment>
<![CDATA[
	public static final int EOF=-1;
	public static final int T__16=16;
	public static final int T__17=17;
	public static final int T__18=18;
	public static final int T__19=19;
	public static final int T__20=20;
	public static final int T__21=21;
	public static final int T__22=22;
	public static final int T__23=23;
	public static final int T__24=24;
	public static final int T__25=25;
	public static final int T__26=26;
	public static final int T__27=27;
	public static final int T__28=28;
	public static final int T__29=29;
	public static final int T__30=30;
	public static final int T__31=31;
	public static final int T__32=32;
	public static final int T__33=33;
	public static final int T__34=34;
	public static final int T__35=35;
	public static final int T__36=36;
	public static final int T__37=37;
	public static final int T__38=38;
	public static final int T__39=39;
	public static final int T__40=40;
	public static final int T__41=41;
	public static final int T__42=42;
	public static final int T__43=43;
	public static final int T__44=44;
	public static final int T__45=45;
	public static final int T__46=46;
	public static final int T__47=47;
	public static final int T__48=48;
	public static final int T__49=49;
	public static final int T__50=50;
	public static final int T__51=51;
	public static final int T__52=52;
	public static final int T__53=53;
	public static final int T__54=54;
	public static final int T__55=55;
	public static final int T__56=56;
	public static final int T__57=57;
	public static final int T__58=58;
	public static final int T__59=59;
	public static final int T__60=60;
	public static final int T__61=61;
	public static final int T__62=62;
	public static final int T__63=63;
	public static final int T__64=64;
	public static final int T__65=65;
	public static final int T__66=66;
	public static final int T__67=67;
	public static final int T__68=68;
	public static final int T__69=69;
	public static final int COMMA=4;
	public static final int DIGIT=5;
	public static final int DOT=6;
	public static final int ID=7;
	public static final int LEFT_PAREN=8;
	public static final int LETTER=9;
	public static final int ML_COMMENT=10;
	public static final int NUMBER=11;
	public static final int QUOTED_TEXT=12;
	public static final int RIGHT_PAREN=13;
	public static final int SL_COMMENT=14;
	public static final int WS=15;

	// delegates
	// delegators
	public Lexer[] getDelegates() {
]]>
</codefragment>
</duplication>
<duplication lines="114" tokens="384">
<file line="905" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/MySqlLexer.java"/>
<file line="1275" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/SqlServerLexer.java"/>
<codefragment>
<![CDATA[
			match(';'); 
			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "SEMICOLON"

	// $ANTLR start "DOT"
	public final void mDOT() throws RecognitionException {
		try {
			int _type = DOT;
			int _channel = DEFAULT_TOKEN_CHANNEL;
			// org/argouml/language/sql/reveng/MySql.g:296:5: ( '.' )
			// org/argouml/language/sql/reveng/MySql.g:296:10: '.'
			{
			match('.'); 
			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "DOT"

	// $ANTLR start "NUMBER"
	public final void mNUMBER() throws RecognitionException {
		try {
			int _type = NUMBER;
			int _channel = DEFAULT_TOKEN_CHANNEL;
			// org/argouml/language/sql/reveng/MySql.g:299:9: ( ( DIGIT )+ )
			// org/argouml/language/sql/reveng/MySql.g:299:13: ( DIGIT )+
			{
			// org/argouml/language/sql/reveng/MySql.g:299:13: ( DIGIT )+
			int cnt1=0;
			loop1:
			while (true) {
				int alt1=2;
				int LA1_0 = input.LA(1);
				if ( ((LA1_0 >= '0' && LA1_0 <= '9')) ) {
					alt1=1;
				}

				switch (alt1) {
				case 1 :
					// org/argouml/language/sql/reveng/MySql.g:
					{
					if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {
						input.consume();
					}
					else {
						MismatchedSetException mse = new MismatchedSetException(null,input);
						recover(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt1 >= 1 ) break loop1;
					EarlyExitException eee = new EarlyExitException(1, input);
					throw eee;
				}
				cnt1++;
			}

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "NUMBER"

	// $ANTLR start "ID"
	public final void mID() throws RecognitionException {
		try {
			int _type = ID;
			int _channel = DEFAULT_TOKEN_CHANNEL;
			// org/argouml/language/sql/reveng/MySql.g:300:5: ( ( ( LETTER | '_' ) ( ( DIGIT )* ) )+ )
			// org/argouml/language/sql/reveng/MySql.g:300:7: ( ( LETTER | '_' ) ( ( DIGIT )* ) )+
			{
			// org/argouml/language/sql/reveng/MySql.g:300:7: ( ( LETTER | '_' ) ( ( DIGIT )* ) )+
			int cnt3=0;
			loop3:
			while (true) {
				int alt3=2;
				int LA3_0 = input.LA(1);
				if ( ((LA3_0 >= 'A' && LA3_0 <= 'Z')||LA3_0=='_'||(LA3_0 >= 'a' && LA3_0 <= 'z')) ) {
					alt3=1;
				}

				switch (alt3) {
				case 1 :
					// org/argouml/language/sql/reveng/MySql.g:300:8: ( LETTER | '_' ) ( ( DIGIT )* )
					{
					if ( (input.LA(1) >= 'A' && input.LA(1) <= 'Z')||input.LA(1)=='_'||(input.LA(1) >= 'a' && input.LA(1) <= 'z') ) {
						input.consume();
					}
					else {
						MismatchedSetException mse = new MismatchedSetException(null,input);
						recover(mse);
						throw mse;
					}
]]>
</codefragment>
</duplication>
<duplication lines="56" tokens="366">
<file line="14" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/MySqlLexer.java"/>
<file line="29" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/MySqlParser.java"/>
<codefragment>
<![CDATA[
	public static final int EOF=-1;
	public static final int T__19=19;
	public static final int T__20=20;
	public static final int T__21=21;
	public static final int T__22=22;
	public static final int T__23=23;
	public static final int T__24=24;
	public static final int T__25=25;
	public static final int T__26=26;
	public static final int T__27=27;
	public static final int T__28=28;
	public static final int T__29=29;
	public static final int T__30=30;
	public static final int T__31=31;
	public static final int T__32=32;
	public static final int T__33=33;
	public static final int T__34=34;
	public static final int T__35=35;
	public static final int T__36=36;
	public static final int T__37=37;
	public static final int T__38=38;
	public static final int T__39=39;
	public static final int T__40=40;
	public static final int T__41=41;
	public static final int T__42=42;
	public static final int T__43=43;
	public static final int T__44=44;
	public static final int T__45=45;
	public static final int T__46=46;
	public static final int T__47=47;
	public static final int T__48=48;
	public static final int T__49=49;
	public static final int T__50=50;
	public static final int T__51=51;
	public static final int T__52=52;
	public static final int T__53=53;
	public static final int T__54=54;
	public static final int COMMA=4;
	public static final int DIGIT=5;
	public static final int DOT=6;
	public static final int ID=7;
	public static final int LEFT_PAREN=8;
	public static final int LETTER=9;
	public static final int ML_COMMENT=10;
	public static final int NUMBER=11;
	public static final int PROTECT_CHAR=12;
	public static final int QUOTED_TEXT=13;
	public static final int RIGHT_PAREN=14;
	public static final int SEMICOLON=15;
	public static final int SL_COMMENT=16;
	public static final int VAR_MYSQL=17;
	public static final int WS=18;

	// delegates
	// delegators
	public Lexer[] getDelegates() {
]]>
</codefragment>
</duplication>
<duplication lines="37" tokens="256">
<file line="15" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/MySqlLexer.java"/>
<file line="30" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/MySqlParser.java"/>
<file line="18" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/SqlServerLexer.java"/>
<file line="36" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/SqlServerParser.java"/>
<codefragment>
<![CDATA[
	public static final int T__19=19;
	public static final int T__20=20;
	public static final int T__21=21;
	public static final int T__22=22;
	public static final int T__23=23;
	public static final int T__24=24;
	public static final int T__25=25;
	public static final int T__26=26;
	public static final int T__27=27;
	public static final int T__28=28;
	public static final int T__29=29;
	public static final int T__30=30;
	public static final int T__31=31;
	public static final int T__32=32;
	public static final int T__33=33;
	public static final int T__34=34;
	public static final int T__35=35;
	public static final int T__36=36;
	public static final int T__37=37;
	public static final int T__38=38;
	public static final int T__39=39;
	public static final int T__40=40;
	public static final int T__41=41;
	public static final int T__42=42;
	public static final int T__43=43;
	public static final int T__44=44;
	public static final int T__45=45;
	public static final int T__46=46;
	public static final int T__47=47;
	public static final int T__48=48;
	public static final int T__49=49;
	public static final int T__50=50;
	public static final int T__51=51;
	public static final int T__52=52;
	public static final int T__53=53;
	public static final int T__54=54;
	public static final int COMMA=4;
]]>
</codefragment>
</duplication>
<duplication lines="65" tokens="185">
<file line="1393" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/MySqlLexer.java"/>
<file line="1700" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/SqlServerLexer.java"/>
<codefragment>
<![CDATA[
				}
			}

			match('\''); 
			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "QUOTED_TEXT"

	// $ANTLR start "LETTER"
	public final void mLETTER() throws RecognitionException {
		try {
			// org/argouml/language/sql/reveng/MySql.g:331:5: ( 'a' .. 'z' | 'A' .. 'Z' )
			// org/argouml/language/sql/reveng/MySql.g:
			{
			if ( (input.LA(1) >= 'A' && input.LA(1) <= 'Z')||(input.LA(1) >= 'a' && input.LA(1) <= 'z') ) {
				input.consume();
			}
			else {
				MismatchedSetException mse = new MismatchedSetException(null,input);
				recover(mse);
				throw mse;
			}
			}

		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "LETTER"

	// $ANTLR start "DIGIT"
	public final void mDIGIT() throws RecognitionException {
		try {
			// org/argouml/language/sql/reveng/MySql.g:335:16: ( '0' .. '9' )
			// org/argouml/language/sql/reveng/MySql.g:
			{
			if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {
				input.consume();
			}
			else {
				MismatchedSetException mse = new MismatchedSetException(null,input);
				recover(mse);
				throw mse;
			}
			}

		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "DIGIT"

	@Override
	public void mTokens() throws RecognitionException {
		// org/argouml/language/sql/reveng/MySql.g:1:8: ( T__19 | T__20 | T__21 | T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | T__42 | T__43 | T__44 | T__45 | T__46 | T__47 | T__48 | T__49 | T__50 | T__51 | T__52 | T__53 | T__54 | LEFT_PAREN | RIGHT_PAREN | COMMA | SEMICOLON | DOT | NUMBER | ID | VAR_MYSQL | PROTECT_CHAR | WS | SL_COMMENT | ML_COMMENT | QUOTED_TEXT )
		int alt11=49;
]]>
</codefragment>
</duplication>
<duplication lines="75" tokens="140">
<file line="824" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/MySqlLexer.java"/>
<file line="1215" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/SqlServerLexer.java"/>
<codefragment>
<![CDATA[
			match("ZEROFILL"); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "T__54"

	// $ANTLR start "LEFT_PAREN"
	public final void mLEFT_PAREN() throws RecognitionException {
		try {
			int _type = LEFT_PAREN;
			int _channel = DEFAULT_TOKEN_CHANNEL;
			// org/argouml/language/sql/reveng/MySql.g:292:12: ( '(' )
			// org/argouml/language/sql/reveng/MySql.g:292:14: '('
			{
			match('('); 
			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "LEFT_PAREN"

	// $ANTLR start "RIGHT_PAREN"
	public final void mRIGHT_PAREN() throws RecognitionException {
		try {
			int _type = RIGHT_PAREN;
			int _channel = DEFAULT_TOKEN_CHANNEL;
			// org/argouml/language/sql/reveng/MySql.g:293:13: ( ')' )
			// org/argouml/language/sql/reveng/MySql.g:293:15: ')'
			{
			match(')'); 
			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "RIGHT_PAREN"

	// $ANTLR start "COMMA"
	public final void mCOMMA() throws RecognitionException {
		try {
			int _type = COMMA;
			int _channel = DEFAULT_TOKEN_CHANNEL;
			// org/argouml/language/sql/reveng/MySql.g:294:7: ( ',' )
			// org/argouml/language/sql/reveng/MySql.g:294:9: ','
			{
			match(','); 
			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "COMMA"

	// $ANTLR start "SEMICOLON"
	public final void mSEMICOLON() throws RecognitionException {
]]>
</codefragment>
</duplication>
<duplication lines="20" tokens="121">
<file line="69" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/src/org/argouml/language/sql/reveng/ModellerC.java"/>
<file line="57" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/src/org/argouml/language/sql/reveng/ModellerP.java"/>
<codefragment>
<![CDATA[
						Object packageOfType = modellerSource.getModel();
						Object mClassifierType = null;
						if (typeSpec != null) {
							mClassifierType = modellerSource.getOrAddDatatype(packageOfType, typeSpec);
						}
			    		//Object mClassifier = null;
						Object mAttribute =  modellerSource.buildAttribute(curClass, mClassifierType, attributeName);
						String multiplicity = Modeller.ASSOCIATION_1;
						if (c.getNullable() == null || c.getNullable()) {
							multiplicity = Modeller.ASSOCIATION_01;
						}
						Model.getCoreHelper().setMultiplicity(mAttribute,
								multiplicity);
						
						if (c.getDefaultValue() != null) {
							Object newInitialValue = Model.getDataTypesFactory()
									.createExpression("Sql", c.getDefaultValue());
							Model.getCoreHelper().setInitialValue(mAttribute,
									newInitialValue);	
						}
]]>
</codefragment>
</duplication>
<duplication lines="21" tokens="105">
<file line="141" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/src/org/argouml/language/sql/reveng/ModellerC.java"/>
<file line="125" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/src/org/argouml/language/sql/reveng/ModellerP.java"/>
<codefragment>
<![CDATA[
				Object mAssociationEnd = modellerSource.getAssociationEnd(name, mClassifier, mClassifierEnd);
				//setVisibility(mAssociationEnd, modifiers);
				Model.getCoreHelper().setMultiplicity(
	                  mAssociationEnd,
	                  multiplicity);
				Model.getCoreHelper().setType(mAssociationEnd, mClassifier);
				
				// String nameAssociationEnd = name;
				if (fk.getColumns().size() == 1) {
					nameAssociationEnd = fk.getColumns().get(0).getName();
				}
				
				Model.getCoreHelper().setName(mAssociationEnd, nameAssociationEnd);
				if (!mClassifier.equals(mClassifierEnd)) {
					// Because if they are equal,
					// then getAssociationEnd(name, mClassifier) could return
					// the wrong assoc end, on the other hand the navigability
					// is already set correctly (at least in this case), so the
					// next line is not necessary. (maybe never necessary?) - thn
					Model.getCoreHelper().setNavigable(mAssociationEnd, true);
				}
]]>
</codefragment>
</duplication>
<duplication lines="29" tokens="105">
<file line="1023" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/MySqlLexer.java"/>
<file line="1390" path="/var/snap/jenkins/2767/workspace/_organization_argouml-sql_master/target/generated-sources/antlr3/org/argouml/language/sql/reveng/SqlServerLexer.java"/>
<codefragment>
<![CDATA[
					loop2:
					while (true) {
						int alt2=2;
						int LA2_0 = input.LA(1);
						if ( ((LA2_0 >= '0' && LA2_0 <= '9')) ) {
							alt2=1;
						}

						switch (alt2) {
						case 1 :
							// org/argouml/language/sql/reveng/MySql.g:
							{
							if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {
								input.consume();
							}
							else {
								MismatchedSetException mse = new MismatchedSetException(null,input);
								recover(mse);
								throw mse;
							}
							}
							break;

						default :
							break loop2;
						}
					}

					}
]]>
</codefragment>
</duplication>
</pmd-cpd>